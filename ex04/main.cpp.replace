#include <fstream>LB#include <iostream>LB#include <string>LBLBstd::string findAndReplace(const std::string &s1, const std::string &s2,LB                           const std::string &line) {LB    std::string replaced_line = "";LB    std::string::size_type found_pos = 0;LB    std::string::size_type last_pos = 0;LB    while ((found_pos = line.find(s1, last_pos)) != std::string::npos) {LB        replaced_line += line.substr(last_pos, found_pos - last_pos);LB        replaced_line += s2;LB        last_pos = found_pos + s1.length();LB    }LB    replaced_line += line.substr(last_pos);LB    return replaced_line;LB}LBLBint main(int argc, char **argv) {LB    if (argc != 4) {LB        std::cout << "Error.\n" << "Usage: ./main filename string1 string2\n";LB        return 1;LB    }LB    std::string filename = argv[1];LB    std::string s1 = argv[2];LB    std::string s2 = argv[3];LBLB    std::ifstream readFile;LB    readFile.open(filename.c_str());LB    if (!readFile.is_open()) {LB        std::cout << "Error reading file " << filename << '\n';LB        return 1;LB    }LB    std::cout << "Replacing " << s1 << " for " << s2 << '\n';LB    std::ofstream writeFile;LB    std::string wFilename = filename + ".replace";LB    writeFile.open(wFilename.c_str());LB    if (!writeFile.is_open()) {LB        std::cout << "Error writing to file " << wFilename << '\n';LB        return 1;LB    }LB    std::string line;LB    std::getline(readFile, line, '\0');LB    writeFile << findAndReplace(s1, s2, line);LBLB    return 0;LB}LB